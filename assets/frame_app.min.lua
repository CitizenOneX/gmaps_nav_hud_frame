BATTERY_LEVEL_FLAG=0x0c;TEXT_FLAG=0x0a;IMAGE_FLAG=0x0d;local a={}local b={}local c={}function update_app_data_accum(d)local e=string.byte(d,1)local f=a[e]if f==nil or next(f)==nil then f={chunk_table={},num_chunks=0,size=0,recv_bytes=0}a[e]=f end;if f.num_chunks==0 then f.size=string.byte(d,2)<<8|string.byte(d,3)f.chunk_table[1]=string.sub(d,4)f.num_chunks=1;f.recv_bytes=string.len(d)-3;if f.recv_bytes==f.size then b[e]=f.chunk_table[1]f.size=0;f.recv_bytes=0;f.num_chunks=0;f.chunk_table[1]=nil;a[e]=f end else f.chunk_table[f.num_chunks+1]=string.sub(d,2)f.num_chunks=f.num_chunks+1;f.recv_bytes=f.recv_bytes+string.len(d)-1;if f.recv_bytes==f.size then b[e]=table.concat(f.chunk_table)for g,h in pairs(f.chunk_table)do f.chunk_table[g]=nil end;f.size=0;f.recv_bytes=0;f.num_chunks=0;a[e]=f end end end;function parse_text(d)local i={}i.data=d;return i end;function parse_image(d)local j={}j.width=string.byte(d,1)<<8|string.byte(d,2)j.height=string.byte(d,3)<<8|string.byte(d,4)j.bpp=string.byte(d,5)j.num_colors=string.byte(d,6)j.palette=string.sub(d,7,7+3*j.num_colors-1)j.size=j.width*j.height*j.bpp+7//8;j.data=string.sub(d,7+3*j.num_colors)return j end;local k={}k[TEXT_FLAG]=parse_text;k[IMAGE_FLAG]=parse_image;function process_raw_items()local l=0;for m,n in pairs(b)do c[m]=k[m](n)b[m]=nil;l=l+1 end;return l end;function print_text()local o=0;for p in c[TEXT_FLAG].data:gmatch("([^\n]*)\n?")do if p~=""then frame.display.text(p,1,o*60+1)o=o+1 end end end;function print_image()local j=c[IMAGE_FLAG]frame.display.bitmap(500,1,j.width,j.num_colors,0,j.data)end;function app_loop()local q=0;while true do rc,err=pcall(function()local r=process_raw_items()frame.sleep(0.005)if r>0 then if c[TEXT_FLAG]~=nil and c[TEXT_FLAG].data~=nil then print_text()end;if c[IMAGE_FLAG]~=nil and c[IMAGE_FLAG].data~=nil then print_image()end;frame.display.show()end;frame.sleep(0.005)local s=frame.time.utc()if q==0 or s-q>180 then pcall(frame.bluetooth.send,string.char(BATTERY_LEVEL_FLAG)..string.char(math.floor(frame.battery_level())))q=s end end)if rc==false then print(err)frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)break end end end;frame.bluetooth.receive_callback(update_app_data_accum)app_loop()